
// Copyright 2020, Jefferson Science Associates, LLC.
// Subject to the terms in the LICENSE file found in the top-level directory.

#pragma once
#include <ostream>

#define JANA2_HAVE_PODIO @JANA2_HAVE_PODIO@
#define JANA2_HAVE_ROOT @JANA2_HAVE_ROOT@
#define JANA2_HAVE_XERCES @JANA2_HAVE_XERCES@


struct JVersion {

    static const int major = @jana2_VERSION_MAJOR@;
    static const int minor = @jana2_VERSION_MINOR@;
    static const int patch = @jana2_VERSION_PATCH@;

    inline static const std::string last_commit_hash = "@JVERSION_COMMIT_HASH@";
    inline static const std::string last_commit_date = "@JVERSION_COMMIT_DATE@";
    inline static const std::string installdir = "@CMAKE_INSTALL_PREFIX@";

    static const bool is_unknown = @JVERSION_UNKNOWN@;
    static const bool is_release = @JVERSION_RELEASE@;
    static const bool is_modified = @JVERSION_MODIFIED@;

    static unsigned int GetMajorNumber() { return major; }
    static unsigned int GetMinorNumber() { return minor; }
    static unsigned int GetPatchNumber() { return patch; }

    static std::string GetCommitHash() { return last_commit_hash; }
    static std::string GetCommitDate() { return last_commit_date; }
    static std::string GetInstallDir() { return installdir; }

    static bool HasPodio() { return JANA2_HAVE_PODIO; }
    static bool HasROOT() { return JANA2_HAVE_ROOT; }
    static bool HasXerces() { return JANA2_HAVE_XERCES; }

    static std::string GetVersion();
    static constexpr size_t GetVersionNumber();

    static void PrintSplash(std::ostream& os);
    static void PrintVersionNumbers(std::ostream& os);
    static void PrintVersionDescription(std::ostream& os);

};



