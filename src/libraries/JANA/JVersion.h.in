
// Copyright 2020, Jefferson Science Associates, LLC.
// Subject to the terms in the LICENSE file found in the top-level directory.

#pragma once
#include <cstdint>
#include <ostream>

#define JANA2_HAVE_PODIO @JANA2_HAVE_PODIO@
#define JANA2_HAVE_ROOT @JANA2_HAVE_ROOT@
#define JANA2_HAVE_XERCES @JANA2_HAVE_XERCES@

#define JANA2_COMMIT_HASH "@JVERSION_COMMIT_HASH@"
#define JANA2_COMMIT_DATE "@JVERSION_COMMIT_DATE@"
#define JANA2_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@"


struct JVersion {

    static const uint64_t major = @jana2_VERSION_MAJOR@;
    static const uint64_t minor = @jana2_VERSION_MINOR@;
    static const uint64_t patch = @jana2_VERSION_PATCH@;

    static const bool is_unknown = @JVERSION_UNKNOWN@;
    static const bool is_release = @JVERSION_RELEASE@;
    static const bool is_modified = @JVERSION_MODIFIED@;

    static constexpr uint64_t GetMajorNumber() { return major; }
    static constexpr uint64_t GetMinorNumber() { return minor; }
    static constexpr uint64_t GetPatchNumber() { return patch; }

    static std::string GetCommitHash() { return JANA2_COMMIT_HASH; }
    static std::string GetCommitDate() { return JANA2_COMMIT_DATE; }
    static std::string GetInstallDir() { return JANA2_INSTALL_PREFIX; }

    static constexpr bool HasPodio() { return JANA2_HAVE_PODIO; }
    static constexpr bool HasROOT() { return JANA2_HAVE_ROOT; }
    static constexpr bool HasXerces() { return JANA2_HAVE_XERCES; }

    static std::string GetVersion();
    static constexpr uint64_t GetVersionNumber();

    static void PrintSplash(std::ostream& os);
    static void PrintVersionNumbers(std::ostream& os);
    static void PrintVersionDescription(std::ostream& os);

};



